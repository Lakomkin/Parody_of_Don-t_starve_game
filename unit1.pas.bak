unit Unit1;

{$mode objfpc}{$H+}

interface

uses
  Classes, SysUtils, FileUtil, Forms, Controls, Graphics, Dialogs, ExtCtrls,
  StdCtrls;

type

  { TForm1 }

  TForm1 = class(TForm)
    Image1: TImage;
    Label1: TLabel;
    Timer1: TTimer;
    procedure FormCreate(Sender: TObject);
    procedure FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure FormKeyUp(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure Timer1Timer(Sender: TObject);
    procedure TreeInteraction(Sender: TObject);
    procedure LogTaking(Sender: TObject);
    procedure FlintTaking(Sender: TObject);
    procedure SaplingLooting(Sender: TObject);
  private

  public

  end;

var
  Form1: TForm1;
  GroundBlock:array [1..10000,1..10000] of TImage;
  Tree:array[1..10000] of TImage;
  tools:array[1..100]of TImage;
  log:array[1..100]of TImage;
  Sapling:array[1..1000]of TImage;
  UI:array[1..100]of TImage;
  Items:array[1..100]of TImage;
  Items_label:array[1..100]of TLabel;
  Flint:array[1..10000] of TImage;
  l,GroundIndex,last_item_count,sapling_count,flint_count,Tree_index,TreeCount,frame,log_count,tree_fps,fall_fps,chop_fps,item_count,tree_id,LastBtn:integer;
  moving,jumper,tree_state:string;

implementation

{$R *.lfm}

{ TForm1 }
function distance (x:TImage):real;
var x1,y1,x2,y2:real;
begin
  x1:=x.Left+(x.Width div 2);
  y1:=x.Top+(x.Height div 2);

  x2:=Form1.Image1.Left+(Form1.Image1.Width div 2 );
  y2:=Form1.Image1.Top+(Form1.Image1.Height div 2);

  distance:=sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));

end;
procedure TForm1.TreeInteraction(Sender: TObject);
var i:integer;
begin
  for i:=1 to TreeCount do begin
    if Tree[i] = Sender then begin
        if (distance(Tree[i])<40)and(Form1.Image1.Left > (Tree[i].Left-40))and(tree_state<>'chopping')and(tree_state<>'falling') then begin
          moving:='left_chopping';
          tree_id:=i;
          chop_fps:=1;
          frame:=0;
          tree_state:='chopping';
          if(Tree[i].Tag > 0)then Tree[i].Tag:=Tree[i].Tag-1 else if(tree_state<>'falling')then begin
            fall_fps:=1;
            tree_state:='falling';
            tree_id:=i;
          end;
        end else
        if (distance(Tree[i])<140)and(Form1.Image1.Left < (Tree[i].Left-40))and(tree_state<>'chopping')and(tree_state<>'falling') then begin
          moving:='right_chopping';
          tree_id:=i;
          chop_fps:=1;
          frame:=0;
          tree_state:='chopping';

          if(Tree[i].Tag > 0)then Tree[i].Tag:=Tree[i].Tag-1 else if(tree_state<>'falling')then begin
            fall_fps:=1;
            tree_state:='falling';
            tree_id:=i;
          end;
        end else tree_state:='idle';

      end;
    end;
  end;

procedure TForm1.LogTaking(Sender: TObject);
var i,j,found:integer;
begin
  found:=0;
  for i:=1 to log_count do begin
    if (Sender = log[i])and(distance(log[i])<120)then begin
      if Image1.Left+(Image1.Width div 2) < log[i].Left + (log[i].Width div 2) then begin
        moving:='right_taking';
        frame:=1;
        log[i].Visible:=false;
        if item_count <> 0 then begin
          for j:=1 to item_count do begin
            if Items[j].Tag = 1 then begin
              Items[j].HelpContext:=Items[j].HelpContext+1;
              if Items[j].HelpContext = 10 then Items_label[j].Left:=Items_label[j].Left-10;
              Items_label[j].Caption:=IntToStr(Items[j].HelpContext);
              found:=1;
            end;
          end;
          if found <> 1 then begin
            item_count:=item_count+1;
            Items[item_count]:=TImage.Create(Form1);
            Items[item_count].Parent:=Form1;
            Items[item_count].Tag:=1;
            Items[item_count].HelpContext:=1;

            Items_label[item_count]:=TLabel.Create(Form1);
            Items_label[item_count].Parent:=Form1;
            Items_label[item_count].Left:=((Form1.Width-UI[1].Width) div 2)+44+(item_count-1)*56;
            Items_label[item_count].Top:=Form1.Height-60;
            Items_label[item_count].Font.Name:='Segoe Script';
            Items_label[item_count].Font.Color:=clWhite;
            Items_label[item_count].Font.Size:=20;
            Items_label[item_count].Caption:='';
          end;
        end else if item_count = 0 then begin
            item_count:=item_count+1;
            Items[item_count]:=TImage.Create(Form1);
            Items[item_count].Parent:=Form1;
            Items[item_count].Tag:=1;
            Items[item_count].HelpContext:=1;

            Items_label[item_count]:=TLabel.Create(Form1);
            Items_label[item_count].Parent:=Form1;
            Items_label[item_count].Left:=((Form1.Width-UI[1].Width) div 2)+44+(item_count-1)*56;
            Items_label[item_count].Top:=Form1.Height-60;
            Items_label[item_count].Font.Name:='Segoe Script';
            Items_label[item_count].Font.Color:=clWhite;
            Items_label[item_count].Font.Size:=20;
            Items_label[item_count].Caption:='';
        end;
      end else
      if Image1.Left+(Image1.Width div 2) >= log[i].Left + (log[i].Width div 2) then begin
        moving:='left_taking';
        frame:=1;
        log[i].Visible:=false;
        if item_count <> 0 then begin
          for j:=1 to item_count do begin
            if Items[j].Tag = 1 then begin
              Items[j].HelpContext:=Items[j].HelpContext+1;
              if Items[j].HelpContext = 10 then Items_label[j].Left:=Items_label[j].Left-10;
              Items_label[j].Caption:=IntToStr(Items[j].HelpContext);
              found:=1;
            end;
          end;
          if found <> 1 then begin
            item_count:=item_count+1;
            Items[item_count]:=TImage.Create(Form1);
            Items[item_count].Parent:=Form1;
            Items[item_count].Tag:=1;
            Items[item_count].HelpContext:=1;

            Items_label[item_count]:=TLabel.Create(Form1);
            Items_label[item_count].Parent:=Form1;
            Items_label[item_count].Left:=((Form1.Width-UI[1].Width) div 2)+44+(item_count-1)*56;
            Items_label[item_count].Top:=Form1.Height-60;
            Items_label[item_count].Font.Name:='Segoe Script';
            Items_label[item_count].Font.Color:=clWhite;
            Items_label[item_count].Font.Size:=20;
            Items_label[item_count].Caption:='';
          end;
        end else if item_count = 0 then begin
            item_count:=item_count+1;
            Items[item_count]:=TImage.Create(Form1);
            Items[item_count].Parent:=Form1;
            Items[item_count].Tag:=1;
            Items[item_count].HelpContext:=1;

            Items_label[item_count]:=TLabel.Create(Form1);
            Items_label[item_count].Parent:=Form1;
            Items_label[item_count].Left:=((Form1.Width-UI[1].Width) div 2)+44+(item_count-1)*56;
            Items_label[item_count].Top:=Form1.Height-60;
            Items_label[item_count].Font.Name:='Segoe Script';
            Items_label[item_count].Font.Color:=clWhite;
            Items_label[item_count].Font.Size:=20;
            Items_label[item_count].Caption:='';
        end;
      end;
    end;
  end;
end;

procedure TForm1.SaplingLooting(Sender: TObject);
var i,j,found:integer;
begin
  found:=0;
  for i:=1 to sapling_count do begin
    if (Sender = Sapling[i])and(distance(Sapling[i])<120)then begin

        moving:='looting';
        frame:=1;
        Sapling[i].Visible:=false;
        if item_count <> 0 then begin
          for j:=1 to item_count do begin
            if Items[j].Tag = 3 then begin
              Items[j].HelpContext:=Items[j].HelpContext+1;
              if Items[j].HelpContext = 10 then Items_label[j].Left:=Items_label[j].Left-10;
              Items_label[j].Caption:=IntToStr(Items[j].HelpContext);
              found:=1;
            end;
          end;
          if found <> 1 then begin
          item_count:=item_count+1;
          Items[item_count]:=TImage.Create(Form1);
          Items[item_count].Parent:=Form1;
          Items[item_count].Tag:=3;
          Items[item_count].HelpContext:=1;

          Items_label[item_count]:=TLabel.Create(Form1);
          Items_label[item_count].Parent:=Form1;
          Items_label[item_count].Left:=((Form1.Width-UI[1].Width) div 2)+44+(item_count-1)*56;
          Items_label[item_count].Top:=Form1.Height-60;
          Items_label[item_count].Font.Name:='Segoe Script';
          Items_label[item_count].Font.Color:=clWhite;
          Items_label[item_count].Font.Size:=20;
          Items_label[item_count].Caption:='';
          end;
        end else if item_count = 0 then begin
          item_count:=item_count+1;
          Items[item_count]:=TImage.Create(Form1);
          Items[item_count].Parent:=Form1;
          Items[item_count].Tag:=3;
          Items[item_count].HelpContext:=1;

          Items_label[item_count]:=TLabel.Create(Form1);
          Items_label[item_count].Parent:=Form1;
          Items_label[item_count].Left:=((Form1.Width-UI[1].Width) div 2)+44+(item_count-1)*56;
          Items_label[item_count].Top:=Form1.Height-60;
          Items_label[item_count].Font.Name:='Segoe Script';
          Items_label[item_count].Font.Color:=clWhite;
          Items_label[item_count].Font.Size:=20;
          Items_label[item_count].Caption:='';
      end;
    end;
  end;
end;

procedure TForm1.FlintTaking(Sender: TObject);
var i,j,found:integer;
begin
  found:=0;
  for i:=1 to flint_count do begin
    if (Sender = Flint[i])and(distance(Flint[i])<200)then begin
      if Image1.Left+(Image1.Width div 2) < Flint[i].Left + (Flint[i].Width div 2) then begin
        moving:='right_taking';
        frame:=1;
        Flint[i].Visible:=false;
        if item_count <> 0 then begin
          for j:=1 to item_count do begin
            if Items[j].Tag = 2 then begin
              Items[j].HelpContext:=Items[j].HelpContext+1;
              if Items[j].HelpContext = 10 then Items_label[j].Left:=Items_label[j].Left-10;
              Items_label[j].Caption:=IntToStr(Items[j].HelpContext);
              found:=1;
            end;
          end;
          if found <> 1 then begin
            item_count:=item_count+1;
            Items[item_count]:=TImage.Create(Form1);
            Items[item_count].Parent:=Form1;
            Items[item_count].Tag:=2;
            Items[item_count].HelpContext:=1;

            Items_label[item_count]:=TLabel.Create(Form1);
            Items_label[item_count].Parent:=Form1;
            Items_label[item_count].Left:=((Form1.Width-UI[1].Width) div 2)+44+(item_count-1)*56;
            Items_label[item_count].Top:=Form1.Height-60;
            Items_label[item_count].Font.Name:='Segoe Script';
            Items_label[item_count].Font.Color:=clWhite;
            Items_label[item_count].Font.Size:=20;
            Items_label[item_count].Caption:='';
          end;
        end else if item_count = 0 then begin
            item_count:=item_count+1;
            Items[item_count]:=TImage.Create(Form1);
            Items[item_count].Parent:=Form1;
            Items[item_count].Tag:=2;
            Items[item_count].HelpContext:=1;

            Items_label[item_count]:=TLabel.Create(Form1);
            Items_label[item_count].Parent:=Form1;
            Items_label[item_count].Left:=((Form1.Width-UI[1].Width) div 2)+44+(item_count-1)*56;
            Items_label[item_count].Top:=Form1.Height-60;
            Items_label[item_count].Font.Name:='Segoe Script';
            Items_label[item_count].Font.Color:=clWhite;
            Items_label[item_count].Font.Size:=20;
            Items_label[item_count].Caption:='';
        end;
      end else
      if Image1.Left+(Image1.Width div 2) >= Flint[i].Left + (Flint[i].Width div 2) then begin
        moving:='left_taking';
        frame:=1;
        Flint[i].Visible:=false;
        if item_count <> 0 then begin
          for j:=1 to item_count do begin
            if Items[j].Tag = 2 then begin
              Items[j].HelpContext:=Items[j].HelpContext+1;
              if Items[j].HelpContext = 10 then Items_label[j].Left:=Items_label[j].Left-10;
              Items_label[j].Caption:=IntToStr(Items[j].HelpContext);
              found:=1;
            end;
          end;
          if found <> 1 then begin
            item_count:=item_count+1;
            Items[item_count]:=TImage.Create(Form1);
            Items[item_count].Parent:=Form1;
            Items[item_count].Tag:=2;
            Items[item_count].HelpContext:=1;

            Items_label[item_count]:=TLabel.Create(Form1);
            Items_label[item_count].Parent:=Form1;
            Items_label[item_count].Left:=((Form1.Width-UI[1].Width) div 2)+44+(item_count-1)*56;
            Items_label[item_count].Top:=Form1.Height-60;
            Items_label[item_count].Font.Name:='Segoe Script';
            Items_label[item_count].Font.Color:=clWhite;
            Items_label[item_count].Font.Size:=20;
            Items_label[item_count].Caption:='';
          end;
        end else if item_count = 0 then begin
            item_count:=item_count+1;
            Items[item_count]:=TImage.Create(Form1);
            Items[item_count].Parent:=Form1;
            Items[item_count].Tag:=2;
            Items[item_count].HelpContext:=1;

            Items_label[item_count]:=TLabel.Create(Form1);
            Items_label[item_count].Parent:=Form1;
            Items_label[item_count].Left:=((Form1.Width-UI[1].Width) div 2)+44+(item_count-1)*56;
            Items_label[item_count].Top:=Form1.Height-60;
            Items_label[item_count].Font.Name:='Segoe Script';
            Items_label[item_count].Font.Color:=clWhite;
            Items_label[item_count].Font.Size:=20;
            Items_label[item_count].Caption:='';
        end;
      end;
    end;
  end;
end;

procedure TForm1.FormCreate(Sender: TObject);
var x,y,j,i,tree_type:integer;
begin
  {__________level_rendering_________}
  TreeCount:=40;
  flint_count:=30;
  sapling_count:=30;
  //Ground
  j:=1;
  x:=4*-512;
  y:=4*-512;
  while j <=10 do begin
    GroundIndex:=1;
    i:=1;
    while GroundIndex <=10 do begin
      GroundBlock[j,GroundIndex]:=TImage.Create(Form1);
      GroundBlock[j,GroundIndex].Parent:=Form1;
      GroundBlock[j,GroundIndex].Width:=512;
      GroundBlock[j,GroundIndex].Height:=512;
      GroundBlock[j,GroundIndex].Left:=x;
      GroundBlock[j,GroundIndex].Top:=y;
      GroundBlock[j,GroundIndex].Picture.LoadFromFile('nature\turfs\1.png');
      GroundBlock[j,GroundIndex].SendToBack;
      GroundIndex:=GroundIndex+1;
      x:=x+512;
      i:=i+1;
    end;
    x:=4*-512;
    y:=y+512;
    j:=j+1;
  end;
  //Trees

  for i:=1 to TreeCount do begin
    x:=random(10*512)-4*512;
    y:=random(10*512)-4*512;
    tree_type:=random(3);
    Tree[i]:=TImage.Create(Form1);
    Tree[i].Parent:=Form1;
    Tree[i].OnClick:=@TreeInteraction;

    if tree_type = 0 then begin
      Tree[i].Width:=205;
      Tree[i].Height:=181;
      Tree[i].Left:=x;
      Tree[i].Top:=y;
      Tree[i].Tag:=random(2)+4;
      Tree[i].HelpContext:=1;
      Tree[i].Picture.LoadFromFile('animations\tree_1\1_001.png');
    end else
    if tree_type = 1 then begin
      Tree[i].Width:=205;
      Tree[i].Height:=160;
      Tree[i].Left:=x;
      Tree[i].Top:=y;
      Tree[i].Tag:=random(2)+4;
      Tree[i].HelpContext:=2;
      Tree[i].Picture.LoadFromFile('animations\tree_2\1_001.png');
    end else
    if tree_type = 2 then begin
      Tree[i].Width:=205;
      Tree[i].Height:=200;
      Tree[i].Left:=x;
      Tree[i].Top:=y;
      Tree[i].Tag:=random(2)+4;
      Tree[i].HelpContext:=3;
      Tree[i].Picture.LoadFromFile('animations\tree_3\1_001.png');
    end;
  end;
  //Flints
  for i:=1 to flint_count do begin
    x:=random(10*512)-4*512;
    y:=random(10*512)-4*512;
    Flint[i]:=TImage.Create(Form1);
    Flint[i].Parent:=Form1;
    Flint[i].OnClick:=@FlintTaking;
    Flint[i].Width:=41;
    Flint[i].Height:=41;
    Flint[i].Left:=x;
    Flint[i].Top:=y;
    Flint[i].Picture.LoadFromFile('nature\item_icons\flint.png');

  end;
 //Saplings
  for i:=1 to sapling_count do begin
    x:=random(10*512)-4*512;
    y:=random(10*512)-4*512;
    Sapling[i]:=TImage.Create(Form1);
    Sapling[i].Parent:=Form1;
    Sapling[i].OnClick:=@SaplingLooting;
    Sapling[i].Width:=56;
    Sapling[i].Height:=77;
    Sapling[i].Left:=x;
    Sapling[i].Top:=y;
    Sapling[i].Picture.LoadFromFile('nature\plants\sapling.png');

  end;

  for i:=1 to TreeCount do begin
    for  j:=1 to flint_count do begin
      if (Flint[j].Top+Flint[j].Height>Tree[i].Top+Tree[i].Height)and(Flint[j].Left>Tree[i].Left)and(Flint[j].Left<Tree[i].Left+Tree[i].Width)then begin
        Tree[i].BringToFront;
      end;
    end;
  end;
  for i:=1 to TreeCount do begin
    for  j:=1 to sapling_count do begin
      if (Sapling[j].Top+Sapling[j].Height>Tree[i].Top+Tree[i].Height)and(Sapling[j].Left>Tree[i].Left)and(Sapling[j].Left<Tree[i].Left+Tree[i].Width)then begin
        Tree[i].BringToFront;
      end;
    end;
  end;

  {__________preperations____________}
  Image1.Left:=(Form1.Width div 2 )-(Image1.Width div 2)-15;
  Image1.Top:=(Form1.Height div 2 )-(Image1.Height div 2);
  moving:='idle';
  jumper:='idle';
  frame:=0;
  Tree_index:=1;
  tree_state:='idle';
  log_count:=0;
  l:=1;
  last_item_count:=0;
  item_count:=0;
  Image1.Picture.LoadFromFile('animations\idle\1_000.png');
  {__________UI____________}

  UI[1]:=TImage.Create(Form1);
  UI[1].Parent:=Form1;
  UI[1].Width:=725;
  UI[1].Height:=70;
  UI[1].Left:=(Form1.Width-UI[1].Width) div 2;
  UI[1].Top:=Form1.Height-UI[1].Height*2;
  UI[1].Picture.LoadFromFile('UI\inventory_bar.png');

  UI[2]:=TImage.Create(Form1);
  UI[2].Parent:=Form1;
  UI[2].Width:=190;
  UI[2].Height:=71;
  UI[2].Left:=((Form1.Width-UI[1].Width) div 2+UI[1].Width)+(Form1.Width-UI[1].Width-UI[1].Width)div 2;
  UI[2].Top:=Form1.Height-UI[1].Height*2;
  UI[2].Picture.LoadFromFile('UI\tools_bar.png');
end;

procedure TForm1.FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
begin

  if key = 68 then begin moving:='right';end;
  if key = 65 then begin moving:='left';end;
  if key = 87 then begin moving:='forward';end;
  if key = 83 then begin moving:='back';end;
  jumper:=moving;
  LastBtn:=key;
end;

procedure TForm1.FormKeyUp(Sender: TObject; var Key: Word; Shift: TShiftState);
begin
  if LastBtn <> key then begin moving:=jumper; end else moving:='idle';

  {if key = 68 then begin moving:='idle';end;
  if key = 65 then begin moving:='idle';end; }
end;



procedure TForm1.Timer1Timer(Sender: TObject);
var path:string;
  j,i,layer:integer;
  dist:real;
begin
  {___________________________________________INVENTORY________________________________________}


  if last_item_count <> item_count then begin
      Items[item_count].Width:=41;
      Items[item_count].Height:=41;
      Items[item_count].Left:=((Form1.Width-UI[1].Width) div 2)+34+(item_count-1)*56;
      Items[item_count].Top:=Form1.Height-46;

      if Items[item_count].Tag = 1 then path:= 'nature\item_icons\log.png';   {_______________log_____}
      if Items[item_count].Tag = 2 then path:= 'nature\item_icons\flint.png'; {_______________flint___}
      if Items[item_count].Tag = 3 then path:= 'nature\item_icons\twings.png'; {_______________sapling_}
      Items[item_count].Picture.LoadFromFile(path);
  end;

  {___________________________________________CHARACTER________________________________________}
  if moving = 'left_taking' then begin

    if (frame<10) then path:='animations\left_take\1_00'+IntToStr(frame)+'.png' else
    if (frame<100)and(frame >9) then path:='animations\left_take\1_0'+IntToStr(frame)+'.png' else
    if (frame<1000)and(frame>99) then path:='animations\left_take\1_'+IntToStr(frame)+'.png';

    Image1.Picture.LoadFromFile(path);
    Image1.BringToFront ;
    frame:=frame+1;
    if frame = 29 then moving:='idle';
  end else
  if moving = 'right_taking' then begin

    if (frame<10) then path:='animations\right_take\1_00'+IntToStr(frame)+'.png' else
    if (frame<100)and(frame >9) then path:='animations\right_take\1_0'+IntToStr(frame)+'.png' else
    if (frame<1000)and(frame>99) then path:='animations\right_take\1_'+IntToStr(frame)+'.png';

    Image1.Picture.LoadFromFile(path);
    Image1.BringToFront ;
    frame:=frame+1;
    if frame = 29 then moving:='idle';
  end else
  if moving = 'left_chopping' then begin

    if (frame<10) then path:='animations\left_chop\1_00'+IntToStr(frame)+'.png' else
    if (frame<100)and(frame >9) then path:='animations\left_chop\1_0'+IntToStr(frame)+'.png' else
    if (frame<1000)and(frame>99) then path:='animations\left_chop\1_'+IntToStr(frame)+'.png';

    Image1.Picture.LoadFromFile(path);
    Image1.BringToFront ;
    frame:=frame+1;
    if frame = 27 then moving:='idle';
  end else
  if moving = 'right_chopping' then begin

    if (frame<10) then path:='animations\right_chop\1_00'+IntToStr(frame)+'.png' else
    if (frame<100)and(frame >9) then path:='animations\right_chop\1_0'+IntToStr(frame)+'.png' else
    if (frame<1000)and(frame>99) then path:='animations\right_chop\1_'+IntToStr(frame)+'.png';

    Image1.Picture.LoadFromFile(path);
    Image1.BringToFront ;
    frame:=frame+1;
    if frame = 27 then moving:='idle';
  end else
  if moving = 'left_chopping' then begin

    if (frame<10) then path:='animations\left_chop\1_00'+IntToStr(frame)+'.png' else
    if (frame<100)and(frame >9) then path:='animations\left_chop\1_0'+IntToStr(frame)+'.png' else
    if (frame<1000)and(frame>99) then path:='animations\left_chop\1_'+IntToStr(frame)+'.png';

    Image1.Picture.LoadFromFile(path);
    Image1.BringToFront ;
    frame:=frame+1;
    if frame = 27 then moving:='idle';
  end else
  if moving = 'idle' then begin
    if frame > 284 then frame:=0;

    if (frame<10) then path:='animations\idle\1_00'+IntToStr(frame)+'.png' else
    if (frame<100)and(frame >9) then path:='animations\idle\1_0'+IntToStr(frame)+'.png' else
    if (frame<1000)and(frame>99) then path:='animations\idle\1_'+IntToStr(frame)+'.png';

    Image1.Picture.LoadFromFile(path);
    Image1.BringToFront ;
    frame:=frame+1;

  end else
  if moving = 'right' then begin
    if frame > 30 then frame:=0;

    if (frame<10) then path:='animations\right\1_00'+IntToStr(frame)+'.png' else
    if (frame<100)and(frame >9) then path:='animations\right\1_0'+IntToStr(frame)+'.png' else
    if (frame<1000)and(frame>99) then path:='animations\right\1_'+IntToStr(frame)+'.png';

    Image1.Picture.LoadFromFile(path);
    Image1.BringToFront ;
    frame:=frame+1;

    for i:=1 to 10 do begin
      for j:=1 to 10 do begin
        GroundBlock[j,i].Left:=GroundBlock[j,i].Left-5;
      end;
    end;
    for i:=1 to TreeCount do begin
      Tree[i].Left:=Tree[i].Left-5;
    end;
    for i:=1 to log_count do begin
      log[i].Left:=log[i].Left-5;
    end;
    for i:=1 to flint_count do begin
      Flint[i].Left:=Flint[i].Left-5;
    end;
    for i:=1 to sapling_count do begin
      Sapling[i].Left:=Sapling[i].Left-5;
    end;
  end else
  if moving = 'left' then begin
    if frame > 30 then frame:=0;

    if (frame<10) then path:='animations\left\1_00'+IntToStr(frame)+'.png' else
    if (frame<100)and(frame >9) then path:='animations\left\1_0'+IntToStr(frame)+'.png' else
    if (frame<1000)and(frame>99) then path:='animations\left\1_'+IntToStr(frame)+'.png';

    Image1.Picture.LoadFromFile(path);
    Image1.BringToFront ;
    frame:=frame+1;

    for i:=1 to 10 do begin
      for j:=1 to 10 do begin
        GroundBlock[j,i].Left:=GroundBlock[j,i].Left+5;
      end;
    end;
    for i:=1 to TreeCount do begin
      Tree[i].Left:=Tree[i].Left+5;
    end;
    for i:=1 to log_count do begin
      log[i].Left:=log[i].Left+5;
    end;
    for i:=1 to flint_count do begin
      Flint[i].Left:=Flint[i].Left+5;
    end;
    for i:=1 to sapling_count do begin
      Sapling[i].Left:=Sapling[i].Left+5;
    end;
  end else
  if moving = 'forward' then begin
    if frame > 32 then frame:=0;

    if (frame<10) then path:='animations\forward\1_00'+IntToStr(frame)+'.png' else
    if (frame<100)and(frame >9) then path:='animations\forward\1_0'+IntToStr(frame)+'.png' else
    if (frame<1000)and(frame>99) then path:='animations\forward\1_'+IntToStr(frame)+'.png';

    Image1.Picture.LoadFromFile(path);
    Image1.BringToFront ;
    frame:=frame+1;

    for i:=1 to 10 do begin
      for j:=1 to 10 do begin
        GroundBlock[j,i].Top:=GroundBlock[j,i].Top+4;
      end;
    end;
    for i:=1 to TreeCount do begin
      Tree[i].Top:=Tree[i].Top+4;
    end;
    for i:=1 to log_count do begin
      log[i].Top:=log[i].Top+4;
    end;
    for i:=1 to flint_count do begin
      Flint[i].Top:=Flint[i].Top+4;
    end;
    for i:=1 to sapling_count do begin
      Sapling[i].Top:=Sapling[i].Top+4;
    end;
  end else
  if moving = 'back' then begin
    if frame > 30 then frame:=0;

    if (frame<10) then path:='animations\back\1_00'+IntToStr(frame)+'.png' else
    if (frame<100)and(frame >9) then path:='animations\back\1_0'+IntToStr(frame)+'.png' else
    if (frame<1000)and(frame>99) then path:='animations\back\1_'+IntToStr(frame)+'.png';

    Image1.Picture.LoadFromFile(path);
    Image1.BringToFront ;
    frame:=frame+1;

    for i:=1 to 10 do begin
      for j:=1 to 10 do begin
        GroundBlock[j,i].Top:=GroundBlock[j,i].Top-4;
      end;
    end;
    for i:=1 to TreeCount do begin
      Tree[i].Top:=Tree[i].Top-4;
    end;
    for i:=1 to log_count do begin
      log[i].Top:=log[i].Top-4;
    end;
    for i:=1 to flint_count do begin
      Flint[i].Top:=Flint[i].Top-4;
    end;
    for i:=1 to sapling_count do begin
      Sapling[i].Top:=Sapling[i].Top-4;
    end;
  end;

  {_______________________________________TREE_CHOPPING________________________________________}
  if tree_state = 'chopping' then begin
    if Tree[tree_id].HelpContext = 1 then begin
      if (chop_fps<10) then path:='animations\tree_1_chopping\1_00'+IntToStr(chop_fps)+'.png' else
      if (chop_fps<100)and(chop_fps >9) then path:='animations\tree_1_chopping\1_0'+IntToStr(chop_fps)+'.png' else
      if (chop_fps<1000)and(chop_fps>99) then path:='animations\tree_1_chopping\1_'+IntToStr(chop_fps)+'.png';

      Tree[tree_id].Picture.LoadFromFile(path);
      if chop_fps > 25 then begin tree_id:=0;tree_state := 'idle';end;

    end else
    if Tree[tree_id].HelpContext = 2 then begin
      if (chop_fps<10) then path:='animations\tree_2_chopping\1_00'+IntToStr(chop_fps)+'.png' else
      if (chop_fps<100)and(chop_fps >9) then path:='animations\tree_2_chopping\1_0'+IntToStr(chop_fps)+'.png' else
      if (chop_fps<1000)and(chop_fps>99) then path:='animations\tree_2_chopping\1_'+IntToStr(chop_fps)+'.png';

      Tree[tree_id].Picture.LoadFromFile(path);
      if chop_fps > 25 then begin tree_id:=0;tree_state := 'idle';end;

    end else
    if Tree[tree_id].HelpContext = 3 then begin
      if (chop_fps<10) then path:='animations\tree_3_chopping\1_00'+IntToStr(chop_fps)+'.png' else
      if (chop_fps<100)and(chop_fps >9) then path:='animations\tree_3_chopping\1_0'+IntToStr(chop_fps)+'.png' else
      if (chop_fps<1000)and(chop_fps>99) then path:='animations\tree_3_chopping\1_'+IntToStr(chop_fps)+'.png';

      Tree[tree_id].Picture.LoadFromFile(path);
      if chop_fps > 25 then begin tree_id:=0;tree_state := 'idle';end;
    end;
  end;

  if tree_state = 'chopping' then chop_fps:=chop_fps+1;

  {_______________________________________TREE_FALLING_________________________________________}
  if tree_state = 'falling' then begin
    if Tree[tree_id].HelpContext = 1 then begin
      if (fall_fps<10) then path:='animations\tree_1_falling\1_00'+IntToStr(fall_fps)+'.png' else
      if (fall_fps<100)and(fall_fps >9) then path:='animations\tree_1_falling\1_0'+IntToStr(fall_fps)+'.png' else
      if (fall_fps<1000)and(fall_fps>99) then path:='animations\tree_1_falling\1_'+IntToStr(fall_fps)+'.png';

      Tree[tree_id].Picture.LoadFromFile(path);
      if fall_fps > 43 then begin
        log_count:=log_count+random(2)+3;
        while l<=log_count do begin
          log[l]:=TImage.Create(Form1);
          log[l].Parent:=Form1;
          log[l].Width:=60;
          log[l].Height:=24;
          log[l].Left:=Tree[tree_id].Left+20+random(50);
          log[l].Top:=Tree[tree_id].Top+120+random(50);
          log[l].OnClick:=@LogTaking;
          log[l].Picture.LoadFromFile('nature\sourses\log.png');
          l:=l+1;
        end;
        tree_state:='idle';
        Tree[tree_id].Visible:=false;
        tree_id:=0;
      end;

    end else
    if Tree[tree_id].HelpContext = 2 then begin
      if (fall_fps<10) then path:='animations\tree_2_falling\1_00'+IntToStr(fall_fps)+'.png' else
      if (fall_fps<100)and(fall_fps >9) then path:='animations\tree_2_falling\1_0'+IntToStr(fall_fps)+'.png' else
      if (fall_fps<1000)and(fall_fps>99) then path:='animations\tree_2_falling\1_'+IntToStr(fall_fps)+'.png';

      Tree[tree_id].Picture.LoadFromFile(path);
      if fall_fps > 43 then begin
        log_count:=log_count+random(1)+3;
        while l<=log_count do begin
          log[l]:=TImage.Create(Form1);
          log[l].Parent:=Form1;
          log[l].Width:=60;
          log[l].Height:=24;
          log[l].Left:=Tree[tree_id].Left+20+random(50);
          log[l].Top:=Tree[tree_id].Top+120+random(50);
          log[l].OnClick:=@LogTaking;
          log[l].Picture.LoadFromFile('nature\sourses\log.png');
          l:=l+1;
        end;
        tree_state:='idle';
        Tree[tree_id].Visible:=false;
        tree_id:=0;
      end;

    end else
    if Tree[tree_id].HelpContext = 3 then begin
      if (fall_fps<10) then path:='animations\tree_3_falling\1_00'+IntToStr(fall_fps)+'.png' else
      if (fall_fps<100)and(fall_fps >9) then path:='animations\tree_3_falling\1_0'+IntToStr(fall_fps)+'.png' else
      if (fall_fps<1000)and(fall_fps>99) then path:='animations\tree_3_falling\1_'+IntToStr(fall_fps)+'.png';

      Tree[tree_id].Picture.LoadFromFile(path);
      if fall_fps > 43 then begin
        log_count:=log_count+random(1)+3;
        while l<=log_count do begin
          log[l]:=TImage.Create(Form1);
          log[l].Parent:=Form1;
          log[l].Width:=60;
          log[l].Height:=24;
          log[l].Left:=Tree[tree_id].Left+20+random(50);
          log[l].Top:=Tree[tree_id].Top+120+random(50);
          log[l].OnClick:=@LogTaking;
          log[l].Picture.LoadFromFile('nature\sourses\log.png');
          l:=l+1;
        end;
        tree_state:='idle';
        Tree[tree_id].Visible:=false;
        tree_id:=0;
      end;

    end;
  end;

  if tree_state = 'falling' then fall_fps:=fall_fps+1;

  {________________________________________TREE_IDLING_________________________________________}
  for i:=1 to TreeCount do begin
    if (Tree[i].HelpContext = 1)and(distance(Tree[i])<1000)and(tree_id <> i)and(Tree[i].Visible<>false) then begin
      if tree_fps > 134 then tree_fps:=0;

      if (tree_fps<10) then path:='animations\tree_1\1_00'+IntToStr(tree_fps)+'.png' else
      if (tree_fps<100)and(tree_fps >9) then path:='animations\tree_1\1_0'+IntToStr(tree_fps)+'.png' else
      if (tree_fps<1000)and(tree_fps>99) then path:='animations\tree_1\1_'+IntToStr(tree_fps)+'.png';

      Tree[i].Picture.LoadFromFile(path);
    end else
    if (Tree[i].HelpContext = 2) and(distance(Tree[i])<1000)and(tree_id <> i)and(Tree[i].Visible<>false)then begin
      if tree_fps > 134 then tree_fps:=0;

      if (tree_fps<10) then path:='animations\tree_2\1_00'+IntToStr(tree_fps)+'.png' else
      if (tree_fps<100)and(tree_fps >9) then path:='animations\tree_2\1_0'+IntToStr(tree_fps)+'.png' else
      if (tree_fps<1000)and(tree_fps>99) then path:='animations\tree_2\1_'+IntToStr(tree_fps)+'.png';

      Tree[i].Picture.LoadFromFile(path);
    end else
    if (Tree[i].HelpContext = 3) and(distance(Tree[i])<1000)and(tree_id <> i)and(Tree[i].Visible<>false)then begin
      if tree_fps > 134 then tree_fps:=0;

      if (tree_fps<10) then path:='animations\tree_3\1_00'+IntToStr(tree_fps)+'.png' else
      if (tree_fps<100)and(tree_fps >9) then path:='animations\tree_3\1_0'+IntToStr(tree_fps)+'.png' else
      if (tree_fps<1000)and(tree_fps>99) then path:='animations\tree_3\1_'+IntToStr(tree_fps)+'.png';

      Tree[i].Picture.LoadFromFile(path);
    end;
  end;

  tree_fps:=tree_fps+1;




  Label1.Caption:='';
  dist:=3000;
  layer:=1;
  for i:=1 to TreeCount do begin
    if distance(Tree[i]) < dist then begin layer:=i;dist:=distance(Tree[i]);end;

  end;
    Tree_index:=layer;
    Label1.Caption:=FloatToStr(dist);

  //Label1.Caption:=FloatToStr(distance(Tree[Tree_index]));

  if distance(Tree[Tree_index])<500 then begin //Trees
    if (Image1.Top + Image1.Height < Tree[Tree_index].Top + Tree[Tree_index].Height - 5)and(Tree[Tree_index].HelpContext = 1) then
    begin
      Tree[Tree_index].BringToFront;
      UI[1].BringToFront;
      for i:=1 to item_count do Items[i].BringToFront;
      for i:=1 to item_count do Items_label[i].BringToFront;
    end else
    if (Image1.Top + Image1.Height < Tree[Tree_index].Top + Tree[Tree_index].Height + 5)and(Tree[Tree_index].HelpContext = 2) then begin
      Tree[Tree_index].BringToFront;
      UI[1].BringToFront;
      UI[2].BringToFront;
      for i:=1 to item_count do Items[i].BringToFront;
      for i:=1 to item_count do Items_label[i].BringToFront;
    end else
    if (Image1.Top + Image1.Height < Tree[Tree_index].Top + Tree[Tree_index].Height - 40)and(Tree[Tree_index].HelpContext = 3) then begin
      Tree[Tree_index].BringToFront;
      UI[1].BringToFront;
      UI[2].BringToFront;
      for i:=1 to item_count do Items[i].BringToFront;
      for i:=1 to item_count do Items_label[i].BringToFront;
    end;
  end;

  dist:=3000;
  layer:=1;

  for i:=1 to flint_count do begin
    if distance(Sapling[i]) < dist then begin layer:=i;dist:=distance(Sapling[i]);end;
  end;
  Tree_index:=layer;


  if distance(Sapling[Tree_index])<500 then begin //Saplings
    if (Image1.Top + Image1.Height < Sapling[Tree_index].Top + Sapling[Tree_index].Height+5) then
    begin
      Sapling[Tree_index].BringToFront;
      UI[1].BringToFront;
      UI[2].BringToFront;
      for i:=1 to item_count do Items[i].BringToFront;
      for i:=1 to item_count do Items_label[i].BringToFront;
    end;
  end;

end;



end.

